                                                                
    <html>
    <head>
      <title>VelocityTools - VelocityView - VelocityViewServlet</title>
             <style type="text/css" media="all">
               @import url("css/maven-theme.css");
               @import url("css/maven-base.css");
               @import url("css/style.css");
                                  </style>        
    </head>

    <body class="composite">

            <div id="banner">
        <a href="http://velocity.apache.org/" id="bannerLeft">
          <img src="http://velocity.apache.org/images/velocity_project_wide.png"
                          align="left" alt="The Velocity Project" border="0"/>
        </a>
                                            <span id="bannerRight">
            <a href="index.html">
              <img src="images/velocitytools.png" align="right" alt="VelocityTools" border="0"/>
            </a>
          </span>
                <div class="clear">
          <hr/>
        </div>
      </div>

            
                  <div id="breadcrumbs">
        <div class="xleft">
                      <a href="http://velocity.apache.org" class="crumb">Velocity</a> &gt;
                      <a href="index.html" class="crumb">VelocityTools</a> &gt;
                      <a href="view.html" class="crumb">VelocityView</a> &gt;
                    VelocityViewServlet
        </div>
        <div class="xright">
                                  <a href="http://velocity.apache.org/engine/devel/" class="sibling">Engine</a>
                      |            <a href="http://velocity.apache.org/tools/devel/" class="sibling">Tools</a>
                      |            <a href="http://velocity.apache.org/anakia/devel/" class="sibling">Anakia</a>
                      |            <a href="http://velocity.apache.org/texen/devel/" class="sibling">Texen</a>
                      |            <a href="http://velocity.apache.org/docbook/" class="sibling">Docbook</a>
                      |            <a href="http://velocity.apache.org/dvsl/devel/" class="sibling">DVSL</a>
                  </div>
        <div class="clear">
          <hr/>
        </div>
      </div>
      

        <!-- LEFT SIDE NAVIGATION -->
                <div id="leftColumn">
          <div id="navcolumn">
                <h5>VelocityTools</h5>
<ul>
        <li class="none"><a href="index.html">Overview</a></li>
    <li class="none"><a href="http://velocity.apache.org/download.cgi#Tools">Download</a></li>
    <li class="none"><a href="javadoc/index.html">Javadoc</a></li>
    <li class="none"><a href="http://wiki.apache.org/velocity/VelocityFAQ">FAQ</a></li>
    <li class="none"><a href="http://wiki.apache.org/velocity/VelocityTools">Wiki</a></li>

</ul>
    <h5>Subprojects</h5>
<ul>
        <li class="none"><a href="generic.html">GenericTools</a></li>
    <li class="none"><a href="view.html">VelocityView</a></li>
    <li class="none"><a href="struts.html">VelocityStruts</a></li>

</ul>
    <h5>Docs</h5>
<ul>
        <li class="none"><a href="upgrading.html">Upgrading to 2.0</a></li>
    <li class="none"><a href="config.html">Configuration</a>
    <ul>
            <li class="none"><a href="config.xml.html">Using XML</a></li>
    <li class="none"><a href="config.properties.html">Using Properties</a></li>
    <li class="none"><a href="config.java.html">Using Java</a></li>

    </ul>
</li>
    <li class="none"><a href="standalone.html">Standalone Use</a></li>
    <li class="none"><a href="frameworks.html">Web Framework Integration</a></li>
    <li class="none"><a href="creatingtools.html">Creating Tools</a></li>
    <li class="none"><a href="summary.html">Tools Usage Summary</a></li>
    <li class="none"><a href="http://velocity.apache.org/engine/devel/glossary.html">Glossary</a></li>

</ul>
    <h5>Development</h5>
<ul>
        <li class="none"><a href="changes.html">ChangeLog</a></li>
    <li class="none"><a href="index.html#Helping_Out">Participating</a></li>
    <li class="none"><a href="dependencies.html">Dependencies</a></li>
    <li class="none"><a href="index.html#Subversion_Repository">Source Code</a></li>
    <li class="none"><a href="http://issues.apache.org/jira/browse/VELTOOLS">Report Issue</a></li>

</ul>

                                <h5><a href="view.html">VelocityView</a></h5>
<ul>
        <li class="none"><a href="view.servlet.html">VelocityViewServlet</a></li>
    <li class="none"><a href="view.layoutservlet.html">VelocityLayoutServlet</a></li>
    <li class="none"><a href="view.tag.html">VelocityViewTag</a></li>
    <li class="none"><a href="view.html#Examples">Examples</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/package-summary.html">Tools</a>
    <ul>
            <li class="none"><a href="javadoc/org/apache/velocity/tools/view/AbstractSearchTool.html">AbstractSearchTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/BrowserTool.html">BrowserTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/CookieTool.html">CookieTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/ImportTool.html">ImportTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/LinkTool.html">LinkTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/PagerTool.html">PagerTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/ParameterTool.html">ParameterTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/ViewContextTool.html">ViewContextTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/ViewRenderTool.html">ViewRenderTool</a></li>
    <li class="none"><a href="javadoc/org/apache/velocity/tools/view/ViewResourceTool.html">ViewResourceTool</a></li>

    </ul>
</li>

</ul>

                        <h5 id="printLink"><a href="view.layoutservlet-printer.html">Print-Friendly Version</a></h5>

            <a class="poweredBy" href="http://velocity.apache.org/" title="Apache Velocity" >
              <img class="poweredBy" alt="Apache Velocity" src="http://velocity.apache.org/images/pbv90x30.png"/>
            </a>
          </div>
        </div>
        
        <!-- RIGHT SIDE MAIN BODY -->
        <div id="bodyColumn">
          <div id="contentBox">
            <div class="section"><a name="VelocityLayoutServlet_(VLS)_Overview"><h2>VelocityLayoutServlet (VLS) Overview</h2></a>
      <p>
        This is an extension to the basic VelocityViewServlet.  It provides
        a simple layout control and customizable error screens for Velocity
        Tools based projects.  VelocityTools is distributed with an example
        app demonstrating the use of this servlet.
        </p>

</div>
<div class="section"><a name="Installation"><h2>Installation</h2></a>
      <p>
        Since this class is an extension of the VelocityViewServlet (VVS),
        to use it simply change the servlet-class value of the web.xml entry
        to the following class:</p>
    <p>
        <a href="javadoc/org/apache/velocity/tools/view/servlet/VelocityLayoutServlet.html">org.apache.velocity.tools.view.servlet.VelocityLayoutServlet</a>
        </p>
<div class="subsection"><h3><a name="Configuration_Settings" class="nolink">Configuration Settings</a></h3>
        <p>Three settings can be added to velocity.properties to control
          the VLS, or the following default values will be used:</p>
<div class="source">
  <pre><sourcecode># Filepath for error template,
#  relative to web application root directory
tools.view.servlet.error.template = Error.vm

# Directory for layout templates,
#  relative to web application root directory
tools.view.servlet.layout.directory = layout/

# Filepath of the default layout template
#  relative to the layout directory
#  NOT relative to the root directory of the webapp!
tools.view.servlet.layout.default.template =  Default.vm</sourcecode></pre>
</div>

</div>

</div>
<div class="section"><a name="Layouts"><h2>Layouts</h2></a>
      <p>
        Now, in your layout templates, the only thing you really need is the
        screen content reference.  So an acceptable layout template could be:</p>
    <p>
<sourcecode>
$screen_content
</sourcecode>
        </p>
    <p>
        ...but that would make this whole thing an idiotic waste of time.
        At the least, you'll probably want to do something along these lines:
        </p>
<div class="source">
  <pre><sourcecode>&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;$!page_title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  $screen_content
&lt;/body&gt;
&lt;/html&gt;
</sourcecode></pre>
</div>
    <p>
        This saves you the trouble of doing the basic &lt;html&gt;,&lt;head&gt;, and &lt;body&gt;
        tags in every single screen.  That's the point of layouts: to save effort
        and eliminate redundancy.  Note that this still lets the inner screen
        control the title of the page.  This works because the layout template
        is blessed by the VLS with access to the same context as the screen *after*
        the screen is done with it. Just do a #set( $page_title = "Hello" ) in the
        screen.
        </p>
    <br clear="all"/>

</div>
<div class="section"><a name="Alternative_Layouts"><h2>Alternative Layouts</h2></a>
      <p>VLS provides two ways to specify an alternate
        template for a requested page:</p>
    <p><b>1. Specify the layout in the request parameters</b></p>
    <p>
          Just add the query string "layout=MyOtherLayout.vm" to any request params
          and the VLS will find it and render your screen within that layout instead
          of the default layout.  It don't matter how you get the layout param into
          the query data, only that it's there.  If you're using the struts tools, the
          most common will likely be:
        </p>
    <p>
          &lt;a href="$link.setRelative('MyScreen.vm').addQueryData('layout','MyOtherLayout.vm')"&gt;
        </p>
    <p>
          but form post data will work just as well.
        </p>
    <p><b>2. Specify the layout in the requested screen.</b></p>
    <p>
          In the requested screen, put a line like this:
          <br clear="all"/>
          #set( $layout = "MyOtherLayout.vm" )
        </p>
    <p>
          This will direct the VLS to use "MyOtherLayout.vm" instead of
          "Default.vm". <i>Setting the layout in this fashion will
          override any layout set by the request parameters.</i>
        </p>
    <br clear="all"/>

</div>
<div class="section"><a name="'Navigations',_'Tiles',_and_How"><h2>'Navigations', 'Tiles', and How</h2></a>
      <p>Those of you who are (or were) Turbine or Struts users will probably want to
        do more than just set the layout and screen content.  You want to include
        arbitrary "tiles" or "navigations", right?  Well, thanks to Velocity's built-in
        <code>#parse</code> directive, this is easy.</p>
    <p>First, create your "tile" as a separate template file like:</p>
<div class="source">
  <pre><sourcecode>&lt;div id="footer"&gt;I made this!&lt;/div&gt;</sourcecode></pre>
</div>
    <p>For creativity's sake, we'll pretend this code is in a file named "Footer.vm"
        that is located in the root of my webapp like my other non-layout templates.</p>
<div class="source">
  <pre><sourcecode>
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;$!page_title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

$screen_content

#parse('Footer.vm')

&lt;/body&gt;
&lt;/html&gt;
</sourcecode></pre>
</div>
    <p>Easy, eh?</p>
    <p>Now, what if you have a lot of different "footer" files and you want your screen
        to decide which one will be used?  No problem!  Do something like this:</p>
<div class="source">
  <pre><sourcecode>
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;$!page_title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

$screen_content

#parse( $screen_footer )

&lt;/body&gt;
&lt;/html&gt;
</sourcecode></pre>
</div>
    <p>and in your screen, just do
        <code>#set( $screen_footer = 'FooFooter.vm' ).</code></p>
    <p>Remember, your #parsed footer template will have access to the same
        velocity context as your layout, which gets the screen's context
        once the screen is done with it.  This lets you set variables for
        the layout and footer to use from your screens.</p>
    <br clear="all"/>

</div>
<div class="section"><a name="Error_Screen"><h2>Error Screen</h2></a>
      <p>Ok, the idea here is pretty simple.  If an uncaught exception or error is thrown
      at some point during the processing of your screen and layout, the error() method
      of the VLS is called.  This overrides the default error() method of the VelocityViewServlet
      to render a template instead of hardcoded html.
      </p>
    <p>This error screen will be rendered within a layout under the same rules as any other
      screen, and will have the following values placed in its context to help you debug
      the error:
      </p>
    <br clear="all"/>
<table>
<tr>
<th colspan="" rowspan="">
  Key available to Template
</th>
<th colspan="" rowspan="">
  Value
</th>

</tr>
<tr>
<td colspan="" rowspan="">
  $error_cause
</td>
<td colspan="" rowspan="">
  java.lang.Throwable that was thrown
</td>

</tr>
<tr>
<td colspan="" rowspan="">
  $stack_trace
</td>
<td colspan="" rowspan="">
  captured output of $error_cause.printStackTrace()
</td>

</tr>

</table>
    <p>In the event that a MethodInvocationException is behind the calling of error(),
      the root cause is extracted from it and dealt with as described above.  But, since
      template reference behavior is partly at fault here, the VLS will also add the
      MethodInvocationException itself to the context as $invocation_exception.  This
      allows you to discover the reference and method call that triggered the root cause.
      To get those, do something like this in your error template:
      </p>
<div class="source">
  <pre><sourcecode>
#if( $invocation_exception )
    oh joy! it's a MethodInvocationException!

    Message: $invocation_exception.message
    Reference name: $invocation_exception.referenceName
    Method name: $invocation_exception.methodName
#end</sourcecode></pre>
</div>
    <br clear="all"/>

</div>

          </div>
        </div>
        <div class="clear">
          <hr/>
        </div>

        <!-- PAGE FOOTER -->
        <div id="footer">
          <div class="xright">
            Copyright &#169; 1999-2007, Apache Software Foundation
          </div>
        </div>
        <div class="clear">
          <hr/>
        </div>
      </body>
    </html>
